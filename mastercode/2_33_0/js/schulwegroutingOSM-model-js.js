(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{3270:function(L,R,u){(function(a,n,S){var D=Object.create,d=Object.defineProperty,T=Object.getOwnPropertyDescriptor,w=Object.getOwnPropertyNames,P=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty,A=(e,s)=>{for(var t in s)d(e,t,{get:s[t],enumerable:!0})},m=(e,s,t,i)=>{if(s&&typeof s=="object"||typeof s=="function")for(let r of w(s))!v.call(e,r)&&r!==t&&d(e,r,{get:()=>s[r],enumerable:!(i=T(s,r))||i.enumerable});return e},f=(e,s,t)=>(t=e!=null?D(P(e)):{},m(s||!e||!e.__esModule?d(t,"default",{value:e,enumerable:!0}):t,e)),F=e=>m(d({},"__esModule",{value:!0}),e),y={};A(y,{default:()=>E}),L.exports=F(y);var b=f(u(224)),c=u(34),h=u(131),M=f(u(19)),g=f(u(49)),E=b.default.extend({defaults:Object.assign({},b.default.prototype.defaults,{id:"schulwegroutingOSM",name:"Schulweg",layerId:"6",layerName:"school_route_layer",schoolList:[],selectedSchool:{},startAddress:{},streetNameList:[],addressList:[],addressListFiltered:[],layer:void 0,isActive:!1,routeResult:{},routeDescription:[],renderToSidebar:!0,renderToWindow:!1,icon:"bi-funnel-fill",startingAddress:"",regionalPrimarySchool:"",selectSchool:"",deleteRoute:"",showRouteDescription:"",hideRouteDescription:"",totalLength:"",from:"",to:"",startPoint:[],targetPoint:[],errorMessage:""}),initialize:function(){this.changeLang(a.language),this.channel=n.channel("SchulwegroutingOSM"),this.superInitialize(),this.listenTo(n.channel("VectorLayer"),{featuresLoaded:function(e){e===this.get("layerId")&&n.request("Map","createLayerIfNotExists",this.layerName).then(s=>{this.setLayer(s),this.addRouteFeatures(this.get("layer").getSource()),this.get("layer").setStyle(this.routeStyle),this.get("isActive")===!0&&this.trigger("render")})}}),this.listenTo(n.channel("Osm"),{lookupAddress:function(e){const s=[];e.forEach(t=>{s.push(t.name)}),this.createAddressSuggestion(s,e)}}),this.listenTo(this,{"change:isActive":function(e,s){if(s){const t=this.getSchoolCollection();this.prepareRegionalSchool(t),this.get("layer")===void 0&&n.request("Map","createLayerIfNotExists",this.layerName).then(i=>{this.setLayer(i),this.addRouteFeatures(this.get("layer").getSource()),this.get("layer").setStyle(this.routeStyle)})}}}),this.listenTo(n.channel("i18next"),{languageChanged:this.changeLang})},changeLang:function(e){this.set({startingAddress:a.t("additional:modules.tools.routingToSchool.startingAddress"),regionalPrimarySchool:a.t("additional:modules.tools.routingToSchool.regionalPrimarySchool"),selectSchool:a.t("additional:modules.tools.routingToSchool.selectSchool"),printRouteName:a.t("additional:modules.tools.routingToSchool.printRouteName"),deleteRoute:a.t("additional:modules.tools.routingToSchool.deleteRoute"),showRouteDescription:a.t("additional:modules.tools.routingToSchool.showRouteDescription"),hideRouteDescription:a.t("additional:modules.tools.routingToSchool.hideRouteDescription"),totalLength:a.t("additional:modules.tools.routingToSchool.totalLength"),from:a.t("additional:modules.tools.routingToSchool.from"),to:a.t("additional:modules.tools.routingToSchool.to"),duration:a.t("additional:modules.tools.routingToSchool.duration"),startTime:a.t("additional:modules.tools.routingToSchool.startTime"),endTime:a.t("additional:modules.tools.routingToSchool.endTime"),currentLng:e})},getSchoolCollection:function(){const e={};let s=!1;return S.ajax({url:encodeURI(window.location.origin)+"/get_schools.php",async:!1,method:"GET",success:function(t){e.schoolList=t},error:function(){s=!0}}),s===!0?(e.schoolList=[],this.setErrorMessage("Abruf der Schulen fehlgeschlagen! Versuchen Sie es bitte erneut."),this.trigger("updateErrorMessage",this.get("errorMessage"))):(this.setErrorMessage(""),this.trigger("updateErrorMessage",this.get("errorMessage"))),e.schoolList},prepareRegionalSchool:function(e){const s=[];e.length>0&&(e.forEach((t,i)=>{const r=g.default.transformToMapProjection(n.request("Map","getMap"),"WGS84",[parseFloat(t.location.value.coordinates[0]),parseFloat(t.location.value.coordinates[1])]);let o=t.name.value.replace(/\s+/g," ").trim();o.includes("Ernaehrung und Bau")&&(o=o.replace("Ernaehrung und Bau","Ernaehrung und Bau/").split("/")[0]),o.includes("Bildungszentrum Wirtschaft")&&(o=o.replace("Bildungszentrum Wirtschaft","Bildungszentrum Wirtschaft/").split("/")[0]),o.includes("Bildungszentrum Technik")&&(o=o.replace("Bildungszentrum Technik","Bildungszentrum Technik/").split("/")[0]),o.includes("beruflichen Schulen")&&(o=o.replace("beruflichen Schulen","beruflichen Schulen/").split("/")[0]),o.includes("Christliche Schule Kiel")&&(o=o.replace("Christliche Schule Kiel","Christliche Schule Kiel/").split("/")[0]),s.push({school_id:t.ogc_fid.value,name:o,category:t.description.value.replaceAll("_"," "),street:t.address.value.streetAddress,postalAddress:t.address.addressLocality,geometry:new h.Point(r)})}),this.sortSchoolsByName(s),this.setSchoolList(s))},sortSchoolsByName:function(e){return e.sort(function(s,t){const i=s.name.toUpperCase(),r=t.name.toUpperCase();return i<r?-1:1})},selectSchool:function(e,s){if(s!=="default"){const t=this.filterSchoolById(e,s);let i={},r=[];this.setSelectedSchool(t),r=g.default.transformFromMapProjection(n.request("Map","getMap"),"WGS84",[parseFloat(t.geometry.flatCoordinates[0]),parseFloat(t.geometry.flatCoordinates[1])]),i={coordinates:[r[1],r[0]]},this.setTargetPoint(i),this.setGeometryByFeatureId("endPoint",this.get("layer").getSource(),t.geometry)}},filterSchoolById:function(e,s){return e.find(t=>t.school_id===parseInt(s,10))},createAddressSuggestion:function(e,s){let t={};this.setStreetNameList(e),this.setAddressList(this.prepareOsmAddressList(s)),t=this.filterAddressList(s,this.get("searchRegExp")),this.setAddressListFiltered(t),t.length===1&&(this.setStartAddress(t[0]),this.setGeometryByFeatureId("startPoint",this.get("layer").getSource(),t[0].geometry))},searchAddress:function(e){n.trigger("Osm","startStreetSearch",e)},prepareOsmAddressList:function(e){return e.forEach(function(s){s.geometry=new h.Point(s.coordinate),s.joinAddress=s.street.replace(/ /g,"")+s.housenumber},this),e},prepareRequest:function(e,s){Object.keys(e).length>0&&Object.keys(s).length>0&&this.sendRequest([this.get("startPoint").coordinates[0],this.get("startPoint").coordinates[1]],[this.get("targetPoint").coordinates[0],this.get("targetPoint").coordinates[1]])},sendRequest:function(e,s){const t={};let i=!1;S.ajax({url:encodeURI(window.location.origin)+"/get_routing.php?startPoint="+e+"&endPoint="+s,async:!1,method:"POST",success:function(r){t.routing=r},error:function(){i=!0}}),i===!0?(this.setErrorMessage("Routing fehlgeschlagen! Bitte versuchen Sie es erneut."),this.trigger("updateErrorMessage",this.get("errorMessage"))):(this.setErrorMessage(""),this.trigger("updateErrorMessage",this.get("errorMessage")),this.handleSuccess(t.routing))},handleSuccess:function(e){const s={},t=e.plan.itineraries[0].duration/3600,i=e.plan.itineraries[0].duration%3600/60,r=new Date(e.plan.itineraries[0].startTime),o=new Date(e.plan.itineraries[0].endTime);s.durationHours=t.toFixed(0),s.durationMinutes=i.toFixed(0),s.totalLength=e.plan.itineraries[0].walkDistance.toFixed(3),s.startTime=r.toLocaleString(),s.endTime=o.toLocaleString();let l=this.prepareRouteDescription(e.plan.itineraries[0].legs[0].steps);const p=this.parseRoute(e.plan.itineraries[0].legs);this.setGeometryByFeatureId("route",this.get("layer").getSource(),p),this.setRouteResult(s),Array.isArray(l)||(l=[l]),this.setRouteDescription(l)},prepareRouteDescription:function(e){const s=[],t={};function i(r){let o="";switch(r){case"NORTH":o="Norden";break;case"NORTHEAST":o="Nordosten";break;case"EAST":o="Osten";break;case"SOUTHEAST":o="S\xFCdosten";break;case"SOUTH":o="S\xFCden";break;case"SOUTHWEST":o="S\xFCdwesten";break;case"WEST":o="Westen";break;case"NORTHWEST":o="Nordwesten";break}return o}return e.forEach(function(r,o,l){switch(r.relativeDirection){case"DEPART":t.startDesc="",t.absoluteDirection=" Richtung "+i(r.absoluteDirection),t.relativeDirections="";break;case"HARD_LEFT":t.startDesc="",t.absoluteDirection=" Richtung "+i(r.absoluteDirection),t.relativeDirections="Scharf links abbiegen auf ";break;case"LEFT":t.startDesc="",t.absoluteDirection=" Richtung "+i(r.absoluteDirection),t.relativeDirections="Links abbiegen auf ";break;case"SLIGHTLY_LEFT":t.startDesc="",t.absoluteDirection=" Richtung "+i(r.absoluteDirection),t.relativeDirections="Leicht links abbiegen auf ";break;case"CONTINUE":t.startDesc="",t.absoluteDirection=" Richtung "+i(r.absoluteDirection),t.relativeDirections="Weiter auf ";break;case"SLIGHTLY_RIGHT":t.startDesc="",t.absoluteDirection=" Richtung "+i(r.absoluteDirection),t.relativeDirections="Leicht rechts abbiegen auf ";break;case"RIGHT":t.startDesc="",t.absoluteDirection=" Richtung "+i(r.absoluteDirection),t.relativeDirections="Rechts abbiegen auf ";break;case"HARD_RIGHT":t.startDesc="",t.absoluteDirection=" Richtung "+i(r.absoluteDirection),t.relativeDirections="Scharf rechts abbiegen auf ";break}o===l.length-1?t.anweisung=t.relativeDirections+r.streetName.bold()+t.absoluteDirection+" ("+r.distance.toFixed(3)+" m).</br>Sie erreichen bald Ihr Ziel.":t.anweisung=t.startDesc+t.relativeDirections+r.streetName.bold()+t.absoluteDirection+" ("+r.distance.toFixed(3)+" m).",s.push({anweisung:t.anweisung})}),s},parseRoute:function(e){let s;const t=new h.MultiLineString({});return e.forEach(function(i){i.line.forEach(function(r,o){this[o]=g.default.transformToMapProjection(n.request("Map","getMap"),"WGS84",[parseFloat(r[1]),parseFloat(r[0])])},i.line),s=new h.LineString(i.line),t.appendLineString(s)}),t},toggleLoader:function(e){e?n.trigger("Util","showLoader"):n.trigger("Util","hideLoader")},filterAddressList:function(e,s){return e.filter(function(t){return t.joinAddress.search(s)!==-1},this)},filterStreets:function(e){const s=this.get("streetNameList"),t=e.split(" ")[0],i=[];return s.forEach(function(r){const o=r.includes(" ")?r.split(" "):[r],l=o.filter(function(p){return p.toLowerCase()===t.toLowerCase()},this);l&&l.length&&i.push(r)},this),i},selectStartAddress:function(e,s){let t={},i=[];const r=s.find(function(o){return o.joinAddress===e.replace(/ /g,"")});this.setStartAddress(r),i=g.default.transformFromMapProjection(n.request("Map","getMap"),"WGS84",[parseFloat(r.geometry.flatCoordinates[0]),parseFloat(r.geometry.flatCoordinates[1])]),t={coordinates:[i[1],i[0]]},this.setStartPoint(t),this.setGeometryByFeatureId("startPoint",this.get("layer").getSource(),r.geometry)},addRouteFeatures:function(e){["startPoint","endPoint","route"].forEach(function(s){const t=new M.default;t.setId(s),t.set("styleId",s),e.addFeature(t)},this)},setGeometryByFeatureId:function(e,s,t){if(s.getFeatureById(e).setGeometry(t),t.getType()==="Point")n.trigger("MapView","setCenter",t.getCoordinates(),6),n.trigger("MapView","setZoomLevelDown");else{const i={duration:0,callback:()=>n.trigger("MapView","setZoomLevelDown")};n.trigger("Map","zoomToExtent",{extent:s.getExtent(),options:i})}},routeStyle:function(e){return e.getGeometry()instanceof h.Point?[new c.Style({image:new c.Circle({radius:18,stroke:new c.Stroke({color:e.getId()==="startPoint"?[24,90,189,1]:[225,0,25,1],width:3}),fill:new c.Fill({color:[255,255,255,0]})})}),new c.Style({image:new c.Circle({radius:4,fill:new c.Fill({color:e.getId()==="startPoint"?[24,90,189,1]:[225,0,25,1]})})})]:new c.Style({stroke:new c.Stroke({color:[24,90,189,.7],width:6,lineDash:[4,10]})})},resetRoute:function(){const e=this.get("layer").getSource().getFeatures();this.setStartAddress({}),this.setSelectedSchool({}),this.setAddressListFiltered([]),this.removeGeomFromFeatures(e),this.setStartPoint([]),this.setTargetPoint([]),this.trigger("resetRouteResult")},removeGeomFromFeatures:function(e){e.forEach(function(s){s.unset("geometry")})},setSelectedSchool:function(e){this.set("selectedSchool",e)},setSchoolList:function(e){this.set("schoolList",e)},setStreetNameList:function(e){this.set("streetNameList",e)},setAddressList:function(e){this.set("addressList",e)},setAddressListFiltered:function(e){this.set("addressListFiltered",e)},setLayer:function(e){this.set("layer",e)},setStartAddress:function(e){this.set("startAddress",e)},setTargetPoint:function(e){this.set("targetPoint",e)},setStartPoint:function(e){this.set("startPoint",e)},setRouteResult:function(e){this.set("routeResult",e)},setRouteDescription:function(e){this.set("routeDescription",e)},setErrorMessage:function(e){this.set("errorMessage",e)}})}).call(this,u(5),u(2),u(13))}}]);
